{"version":3,"sources":["theme/mainTheme.js","theme/GlobalStyle.js","components/atoms/Title.js","components/atoms/Input.js","components/molecules/Search.js","components/organisms/ListOfCities/ListOfCities.js","views/Main/index.js","views/Root.js","index.js"],"names":["theme","bgColor","lightColor","fontColor","marginContent","marginBox","fontSize","xs","s","m","l","xl","xxl","xxxl","device","mobileS","mobileM","tablet","laptop","laptopL","desktop","devicePort","deviceLand","GlobalStyle","createGlobalStyle","Title","styled","h1","main","css","Input","input","StyledSearch","form","StyledButton","Search","setMessage","useState","search","setSeatch","as","value","onChange","e","target","type","onClick","preventDefault","Error","StyledCity","section","StyledRow","div","StyledP","p","StyledValues","h3","ListOfCities","message","name","temp","pressure","wind","description","StyledMain","Main","StyledCenter","Root","ReactDOM","render","document","getElementById"],"mappings":"kNAEaA,EAAQ,CACnBC,QAAS,mBACTC,WAAY,UACZC,UAAW,QACXC,cAAe,OACfC,UAAW,OACXC,SAAU,CACRC,GAAI,SACJC,EAAG,SACHC,EAAG,UACHC,EAAG,OACHC,GAAI,OACJC,IAAK,OACLC,KAAM,QAERC,OAAQ,CACNC,QAAS,2BACTC,QAAS,4BACTC,OAAQ,2BACRC,OAAQ,6BACRC,QAAS,6BACTC,QAAS,8BAEXC,WAAY,CACVN,QAAS,wDACTC,QAAS,wDACTC,OAAQ,uDACRC,OAAQ,yDACRC,QAAS,yDACTC,QAAS,0DAEXE,WAAY,CACVN,QAAS,yDACTC,OAAQ,wDACRC,OAAQ,0DACRC,QAAS,0DACTC,QAAS,4D,svBCpCb,IAmCeG,EAnCKC,YAAH,IAiBd,qBAAGxB,MAAkBqB,WAAWJ,QAK/B,qBAAGjB,MAAkBsB,WAAWJ,QAKhC,qBAAGlB,MAAkBsB,WAAWH,U,2SC3B7B,IAAMM,EAAQC,IAAOC,GAAV,IACH,qBAAG3B,MAAkBM,SAASI,GAEzC,qBAAGkB,MAEHC,YADI,IAGW,qBAAG7B,MAAkBM,SAASK,O,yGCP1C,IAAMmB,EAAQJ,IAAOK,MAAV,K,kaCKlB,IAAMC,EAAeN,IAAOO,KAAV,KAYZC,EAAeR,IAAOK,MAAV,KA8CHI,EAvCA,SAAC,GAAmB,EAAjBC,WAAkB,IAAD,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KA8BjC,OACE,kBAACP,EAAD,KACE,kBAACP,EAAD,CAAOe,GAAG,UAAV,mBACA,kBAACV,EAAD,CAAOW,MAAOH,EAAQI,SA/BT,SAAAC,GACfJ,EAAUI,EAAEC,OAAOH,UA+BjB,kBAACP,EAAD,CAAcW,KAAK,SAASC,QA5Bf,SAAAH,GAEf,MADAA,EAAEI,iBACIC,MAAM,mBA0BqCP,MAAM,W,giBCvD3D,IAAMQ,EAAavB,IAAOwB,QAAV,KAQVC,EAAYzB,IAAO0B,IAAV,KAMTC,EAAU3B,IAAO4B,EAAV,KAIPC,EAAe7B,IAAO8B,GAAV,KAmCHC,EA9BM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,kBAACT,EAAD,KACsB,kBAAZS,EACNA,EAEA,oCACE,kBAACH,EAAD,CAAcf,GAAG,MAAMkB,EAAQC,MAC/B,kBAACR,EAAD,KACE,kBAACI,EAAD,qBACA,kBAACF,EAAD,KAAUK,EAAQE,KAAlB,WAEF,kBAACT,EAAD,KACE,kBAACI,EAAD,kBACA,kBAACF,EAAD,KAAUK,EAAQG,SAAlB,QAEF,kBAACV,EAAD,KACE,kBAACI,EAAD,oBACA,kBAACF,EAAD,KAAUK,EAAQI,KAAlB,QAEF,kBAACX,EAAD,KACE,kBAACI,EAAD,qBACA,kBAACF,EAAD,KAAUK,EAAQK,iB,8JC5C9B,IAAMC,EAAatC,IAAOE,KAAV,KAmBDqC,EAXF,WAAO,IAAD,EACa5B,mBAAS,IADtB,mBACVqB,EADU,KACDtB,EADC,KAEjB,OACE,kBAAC4B,EAAD,KACE,kBAACvC,EAAD,CAAOG,MAAI,GAAX,eACA,kBAAC,EAAD,CAAQQ,WAAYA,IACpB,kBAAC,EAAD,CAAcsB,QAASA,M,iMCd7B,IAAMQ,EAAexC,IAAO0B,IAAV,KAiBHe,EATF,kBACX,kBAAC,IAAD,CAAenE,MAAOA,GACpB,kBAACkE,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCdNE,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.69b2f088.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nexport const theme = {\n  bgColor: 'rgb(35, 35, 145)',\n  lightColor: '#4d4dc9',\n  fontColor: 'white',\n  marginContent: '15px',\n  marginBox: '30px',\n  fontSize: {\n    xs: '1.2rem',\n    s: '1.5rem',\n    m: '1.75rem',\n    l: '2rem',\n    xl: '3rem',\n    xxl: '4rem',\n    xxxl: '5rem',\n  },\n  device: {\n    mobileS: '@media (min-width: 360p)',\n    mobileM: '@media (min-width: 640px)',\n    tablet: '@media(min-width: 768px)',\n    laptop: '@media (min-width: 1024px)',\n    laptopL: '@media (min-width: 1280px)',\n    desktop: '@media (min-width: 1600px)',\n  },\n  devicePort: {\n    mobileS: '@media (min-width: 360px) and (orientation: portrait)',\n    mobileM: '@media (min-width: 640px) and (orientation: portrait)',\n    tablet: '@media(min-width: 768px) and (orientation: portrait)',\n    laptop: '@media (min-width: 1024px) and (orientation: portrait)',\n    laptopL: '@media (min-width: 1280px) and (orientation: portrait)',\n    desktop: '@media (min-width: 1600px) and (orientation: portrait)',\n  },\n  deviceLand: {\n    mobileM: '@media (min-width: 640px) and (orientation: landscape)',\n    tablet: '@media(min-width: 768px) and (orientation: landscape)',\n    laptop: '@media (min-width: 1024px) and (orientation: landscape)',\n    laptopL: '@media (min-width: 1280px) and (orientation: landscape)',\n    desktop: '@media (min-width: 1600px) and (orientation: landscape)',\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto+Mono&display=swap&subset=latin-ext'); @import url('https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap');  *, *::before, *::after {\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-family: 'Montserrat', sans-serif;\n    margin: 0;\n    padding: 0;\n  }\n  html {\n    font-size: 62.5%;\n    scroll-behavior: smooth;\n  }\n  body {\n    font-size: 1.6rem;\n  }\n\n ${({ theme }) => theme.devicePort.tablet}{\n    html {\n      font-size: 90%;\n    }\n  } \n  ${({ theme }) => theme.deviceLand.laptop}{\n    html {\n      font-size: 100%;\n    }\n  } \n  ${({ theme }) => theme.deviceLand.laptopL}{\n    html {\n      font-size: 110%;\n    }\n  } \n\n`;\n\nexport default GlobalStyle;\n","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: ${({ theme }) => theme.fontSize.l};\n  color: black;\n  ${({ main }) =>\n    main &&\n    css`\n      color: white;\n      font-size: ${({ theme }) => theme.fontSize.xl};\n      text-transform: uppercase;\n      margin-top: 20px;\n    `}\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 30px;\n  flex-grow: 1;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Title } from 'components/atoms/Title';\nimport { Input } from 'components/atoms/Input';\n\n/* eslint-disable no-undef */\n\nconst StyledSearch = styled.form`\n  width: 90%;\n  margin: 20px 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  @media (orientation: landscape) {\n    width: 50%;\n  }\n`;\n\nconst StyledButton = styled.input`\n  background-color: lightgray;\n  height: 30px;\n  width: 40px;\n  border: 1px solid black;\n`;\n\nconst Search = ({ setMessage }) => {\n  const [search, setSeatch] = useState('');\n  const onChange = e => {\n    setSeatch(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    throw Error('Błąd');\n    const FirstLetter = search.charAt(0).toUpperCase();\n    const RestWord = search.slice(1).toLowerCase();\n    const Word = FirstLetter + RestWord;\n    const url = `http://api.openweathermap.org/data/2.5//weather?q=${Word}&APPID=7437862ea1728b60faa11402b4e72d11`;\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        if (res.cod == 200) {\n          setMessage({\n            name: res.name,\n            wind: res.wind.speed,\n            temp: Math.round((res.main.temp - 273) * 100) / 100,\n            pressure: res.main.pressure,\n            description: res.weather[0].description,\n          });\n        } else {\n          setMessage('Something gone bad. Check name of your city.');\n        }\n      });\n  };\n  return (\n    <StyledSearch>\n      <Title as=\"legend\">Find your city:</Title>\n      <Input value={search} onChange={onChange} />\n      <StyledButton type=\"submit\" onClick={onSubmit} value=\"Show\" />\n    </StyledSearch>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/* eslint-disable no-undef */\n\nconst StyledCity = styled.section`\n  width: 95%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst StyledRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledP = styled.p`\n  text-align: justify;\n`;\n\nconst StyledValues = styled.h3`\n  text-transform: uppercase;\n  margin-right: 5px;\n`;\n\nconst ListOfCities = ({ message }) => {\n  return (\n    <StyledCity>\n      {typeof message === 'string' ? (\n        message\n      ) : (\n        <>\n          <StyledValues as=\"h2\">{message.name}</StyledValues>\n          <StyledRow>\n            <StyledValues>Temperature:</StyledValues>\n            <StyledP>{message.temp}&#x2103;</StyledP>\n          </StyledRow>\n          <StyledRow>\n            <StyledValues>Pressure:</StyledValues>\n            <StyledP>{message.pressure}hPa</StyledP>\n          </StyledRow>\n          <StyledRow>\n            <StyledValues>Wind Speed:</StyledValues>\n            <StyledP>{message.wind}m/s</StyledP>\n          </StyledRow>\n          <StyledRow>\n            <StyledValues>Description:</StyledValues>\n            <StyledP>{message.description}</StyledP>\n          </StyledRow>\n        </>\n      )}\n    </StyledCity>\n  );\n};\n\nexport default ListOfCities;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Title } from 'components/atoms/Title';\nimport Search from 'components/molecules/Search';\nimport ListOfCities from 'components/organisms/ListOfCities/ListOfCities';\n\nconst StyledMain = styled.main`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Main = () => {\n  const [message, setMessage] = useState('');\n  return (\n    <StyledMain>\n      <Title main>Weather App</Title>\n      <Search setMessage={setMessage} />\n      <ListOfCities message={message} />\n    </StyledMain>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { theme } from 'theme/mainTheme';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport Main from 'views/Main';\n\nconst StyledCenter = styled.div`\n  display: flex;\n  background-color: #3a73a9;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Root = () => (\n  <ThemeProvider theme={theme}>\n    <StyledCenter>\n      <GlobalStyle />\n      <Main />\n    </StyledCenter>\n  </ThemeProvider>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}